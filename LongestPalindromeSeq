



public class LongestPalindromicSeq {
	static int max(int a, int b) {
		if (a < b)
			return b;
		else
			return a;
	}

	static void palindrome(String s, int n) {
		int[][] dp = new int[n + 1][n + 1];
		for (int i = 0; i <= n; i++) {
			dp[i][i] = 1;
		}

		
		for(int l=2;l<=n;l++)
		{
			for(int i=0;i<n-l+1;i++)
			{
				int j = i+l-1;
				if(l==2 && s.charAt(i)==s.charAt(j))
				{
					dp[i][j]=2;
				}
				else if(s.charAt(i)==s.charAt(j))
				{
					dp[i][j] = 2+dp[i+1][j-1];
				}
				else
				{
					dp[i][j] = max(dp[i+1][j],dp[i][j-1]);
				}
			}
		}
		System.out.print(dp[0][n]);
		
		
	}

	public static void main(String args[]) {
		String s = "agbdba";
		int n = s.length();
		palindrome(s, n);
	}
}
